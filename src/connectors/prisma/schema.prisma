generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model gym {
  id       Int      @id @default(autoincrement())
  name     String
  logo     String?
  created  DateTime @default(now())
  address  String?
  cityId   Int
  city     city     @relation(fields: [cityId], references: [id])
  admin    user     @relation(fields: [userId], references: [id])
  userId   Int
  isClient Boolean  @default(false)
  price    Int      @default(0)
  deleted  Boolean  @default(false)
}

model user {
  id           Int           @id @default(autoincrement())
  first_name   String
  last_name    String
  email        String        @unique
  password     String
  phone_number String?
  role_x_user  role_x_user[]
  admin        admin[]
  client       client[]
  gym          gym[]
  teacher      teacher[]
}

model admin {
  id     Int  @id @default(autoincrement())
  user   user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model teacher {
  id     Int  @id @default(autoincrement())
  user   user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model client {
  id     Int  @id @default(autoincrement())
  user   user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model role {
  id           Int           @id @default(autoincrement())
  name         String
  machine_name String
  role_x_user  role_x_user[]
}

model role_x_user {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  user   user @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   role @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
}

model country {
  id   Int    @id @default(autoincrement())
  name String
  city city[]
}

model city {
  id        Int     @id @default(autoincrement())
  name      String
  countryId Int
  country   country @relation(fields: [countryId], references: [id])
  gym       gym[]
}
